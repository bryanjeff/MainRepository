// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PO_API.Entities;

namespace PO_API.Migrations
{
    [DbContext(typeof(POAPI_Context))]
    [Migration("20210826123433_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PO_API.Entities.Division", b =>
                {
                    b.Property<int>("DivId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DivDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DivName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DivId");

                    b.ToTable("Divisions");

                    b.HasData(
                        new
                        {
                            DivId = 1,
                            DivDescription = "PEC Description",
                            DivName = "PEC"
                        },
                        new
                        {
                            DivId = 2,
                            DivDescription = "CSD Description",
                            DivName = "CSD"
                        },
                        new
                        {
                            DivId = 3,
                            DivDescription = "ZLC Description",
                            DivName = "ZLC"
                        },
                        new
                        {
                            DivId = 4,
                            DivDescription = "WPO Description",
                            DivName = "WPO"
                        },
                        new
                        {
                            DivId = 5,
                            DivDescription = "DEC Description",
                            DivName = "DEC"
                        },
                        new
                        {
                            DivId = 6,
                            DivDescription = "RE Description",
                            DivName = "RE"
                        },
                        new
                        {
                            DivId = 7,
                            DivDescription = "FI Description",
                            DivName = "FI"
                        },
                        new
                        {
                            DivId = 8,
                            DivDescription = "QP Description",
                            DivName = "QP"
                        },
                        new
                        {
                            DivId = 9,
                            DivDescription = "OGW Description",
                            DivName = "OGW"
                        },
                        new
                        {
                            DivId = 10,
                            DivDescription = "PF Description",
                            DivName = "PF"
                        },
                        new
                        {
                            DivId = 11,
                            DivDescription = "EEM Description",
                            DivName = "EEM"
                        },
                        new
                        {
                            DivId = 12,
                            DivDescription = "NPI Description",
                            DivName = "NPI"
                        });
                });

            modelBuilder.Entity("PO_API.Entities.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlantName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PlantId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            PlantId = 1,
                            Description = "Plant for Region Columbia",
                            PlantName = "Plant Columbia"
                        },
                        new
                        {
                            PlantId = 2,
                            Description = "Plant for Region Asia-Pacific",
                            PlantName = "Plant Asia-Pacific"
                        });
                });

            modelBuilder.Entity("PO_API.Entities.TargetSetting", b =>
                {
                    b.Property<int>("TSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TSettingDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TSettingName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TSettingId");

                    b.ToTable("TargetSettings");

                    b.HasData(
                        new
                        {
                            TSettingId = 1,
                            TSettingDesc = "Description 1",
                            TSettingName = "Current Pillar Score"
                        },
                        new
                        {
                            TSettingId = 2,
                            TSettingDesc = "Description 2",
                            TSettingName = "Current Maturity Level"
                        },
                        new
                        {
                            TSettingId = 3,
                            TSettingDesc = "Description 3",
                            TSettingName = "# Actions to Next Level"
                        },
                        new
                        {
                            TSettingId = 4,
                            TSettingDesc = "Description 4",
                            TSettingName = "Overall # Target Actions 2021"
                        },
                        new
                        {
                            TSettingId = 5,
                            TSettingDesc = "Description 5",
                            TSettingName = "# Commited Actions"
                        });
                });

            modelBuilder.Entity("PO_API.Entities.TargetSettingSumary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ActionVal")
                        .HasColumnType("float");

                    b.Property<DateTime>("CompDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DivId")
                        .HasColumnType("int");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<int>("TSettingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivId");

                    b.HasIndex("PlantId");

                    b.HasIndex("TSettingId");

                    b.ToTable("TargetSettingSumaries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionVal = 1.2,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 1,
                            PlantId = 1,
                            TSettingId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActionVal = 2.2000000000000002,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 2,
                            PlantId = 1,
                            TSettingId = 1
                        },
                        new
                        {
                            Id = 3,
                            ActionVal = 1.2,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 3,
                            PlantId = 1,
                            TSettingId = 1
                        },
                        new
                        {
                            Id = 4,
                            ActionVal = 1.2,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 4,
                            PlantId = 1,
                            TSettingId = 1
                        },
                        new
                        {
                            Id = 5,
                            ActionVal = 1.2,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 5,
                            PlantId = 1,
                            TSettingId = 1
                        },
                        new
                        {
                            Id = 6,
                            ActionVal = 1.2,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 6,
                            PlantId = 1,
                            TSettingId = 1
                        },
                        new
                        {
                            Id = 7,
                            ActionVal = 1.2,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 7,
                            PlantId = 1,
                            TSettingId = 1
                        },
                        new
                        {
                            Id = 8,
                            ActionVal = 1.2,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 8,
                            PlantId = 1,
                            TSettingId = 1
                        },
                        new
                        {
                            Id = 9,
                            ActionVal = 1.0,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 2,
                            PlantId = 1,
                            TSettingId = 1
                        },
                        new
                        {
                            Id = 10,
                            ActionVal = 2.0,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 2,
                            PlantId = 1,
                            TSettingId = 2
                        },
                        new
                        {
                            Id = 11,
                            ActionVal = 1.0,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 3,
                            PlantId = 1,
                            TSettingId = 2
                        },
                        new
                        {
                            Id = 12,
                            ActionVal = 1.0,
                            CompDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivId = 4,
                            PlantId = 1,
                            TSettingId = 2
                        });
                });

            modelBuilder.Entity("PO_API.Entities.TargetSettingSumary", b =>
                {
                    b.HasOne("PO_API.Entities.Division", "Divisions")
                        .WithMany()
                        .HasForeignKey("DivId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO_API.Entities.Plant", "Plants")
                        .WithMany()
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO_API.Entities.TargetSetting", "TargetSettings")
                        .WithMany()
                        .HasForeignKey("TSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Divisions");

                    b.Navigation("Plants");

                    b.Navigation("TargetSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
